---
title: "Sem.II Final Grades 9-11"
date: 2018-06-11T20:40:26-05:00
weight: 30
draft: false
#type: slide
#theme: white
---

1. Write the output from each. If an error results, indicate why.

    1. `(list 1 20 30 empty)`
    2. `(list 20 40 (list 60 80) 100)`
    3. `(list* (list 1 2 3) 4)`
    4. `(list 11 12 (list* 13 14 empty))`
    5. `(cons 2 (cons 8 (list* 16 (cons 32 64))))`


2. The code below is intended to add up all of the integers in the
`data` that are above 50, but replacing numbers below 100 with 100. Give an example of a
test case that it can pass and a test case that it fails.

(define (add-ex data)
  (cond	[(>= 50 (first data))
	(list (first data (add-ex (rest data))))]
        [(<= 50 (first data) 100)
         100]
	[else (add-ex (rest data))]))

