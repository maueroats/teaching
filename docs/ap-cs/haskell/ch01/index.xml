<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1. Intro on WY Computer Science</title>
    <link>http://wy-cs.info/ap-cs/haskell/ch01/</link>
    <description>Recent content in 1. Intro on WY Computer Science</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Sep 2017 15:34:07 -0500</lastBuildDate>
    
	<atom:link href="http://wy-cs.info/ap-cs/haskell/ch01/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Ch01 Reading Guide</title>
      <link>http://wy-cs.info/ap-cs/haskell/ch01/ch01-reading-guide/</link>
      <pubDate>Sat, 09 Sep 2017 15:36:40 -0500</pubDate>
      
      <guid>http://wy-cs.info/ap-cs/haskell/ch01/ch01-reading-guide/</guid>
      <description>Haskell introduction reading questions  Haskell is supposed to be a purely functional language. Unpack that:
 What does pure mean? What is the difference between functional and imperative? (The book is not so clear on this point. What do you think it says, in your own words?)  Haskell is lazy. What does this mean?
 Haskell is statically typed. This could be unpacked, too.
 What does typed mean?</description>
    </item>
    
  </channel>
</rss>