<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Haskell on WY Computer Science</title>
    <link>https://wy-cs.site/tags/haskell/</link>
    <description>Recent content in Haskell on WY Computer Science</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Sep 2017 15:34:07 -0500</lastBuildDate>
    
	<atom:link href="https://wy-cs.site/tags/haskell/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>1. Intro</title>
      <link>https://wy-cs.site/ap-cs/haskell/ch01/</link>
      <pubDate>Sat, 09 Sep 2017 15:34:07 -0500</pubDate>
      
      <guid>https://wy-cs.site/ap-cs/haskell/ch01/</guid>
      <description>&lt;p&gt;A high-level overview of the Haskell language and why its features are good.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>3. Types and Typeclasses</title>
      <link>https://wy-cs.site/ap-cs/haskell/ch03/</link>
      <pubDate>Tue, 12 Sep 2017 13:18:35 -0500</pubDate>
      
      <guid>https://wy-cs.site/ap-cs/haskell/ch03/</guid>
      <description>&lt;p&gt;Types categorize the kinds of data that appear in a program. Typeclasses provide general abilities that different types can have.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>4. Syntax in Functions</title>
      <link>https://wy-cs.site/ap-cs/haskell/ch04/</link>
      <pubDate>Mon, 18 Sep 2017 13:22:05 -0500</pubDate>
      
      <guid>https://wy-cs.site/ap-cs/haskell/ch04/</guid>
      <description>&lt;p&gt;Patterns, guards, where, let, and case.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Haskell</title>
      <link>https://wy-cs.site/ap-cs/haskell/</link>
      <pubDate>Wed, 05 Sep 2018 11:26:51 -0500</pubDate>
      
      <guid>https://wy-cs.site/ap-cs/haskell/</guid>
      <description>You will need the the text Learn You a Haskell For Great Good.
 Use repl.it for programming.
 Haskell is a pure, lazy, statically typed language. In the first chapter you will learn what those terms mean. Later you will learn how to write programs.
Chapters  1. Intro A high-level overview of the Haskell language and why its features are good.
  2. Starting Out Learn how to make lists and tuples.</description>
    </item>
    
    <item>
      <title>Chapter 4 Reading Guide</title>
      <link>https://wy-cs.site/ap-cs/haskell/ch04/ch04-reading-guide/</link>
      <pubDate>Sun, 17 Sep 2017 20:47:05 -0500</pubDate>
      
      <guid>https://wy-cs.site/ap-cs/haskell/ch04/ch04-reading-guide/</guid>
      <description>Sections 4.1&amp;ndash;4.3  A pattern starts out with &amp;ldquo;dog&amp;rdquo;,&amp;ldquo;cat&amp;rdquo;, &amp;ldquo;cat dog&amp;rdquo;, &amp;ldquo;cat dog cat&amp;rdquo;, &amp;ldquo;cat dog cat cat dog&amp;rdquo;, &amp;ldquo;cat dog cat cat dog cat dog cat&amp;rdquo; and so on - each new string is created by appending the previous two with a space in between them. Write a function that takes in the number of the word in the sequence and returns the word, starting with 1 is &amp;ldquo;dog&amp;rdquo;.</description>
    </item>
    
    <item>
      <title>Chapter 2 Reading Guide</title>
      <link>https://wy-cs.site/ap-cs/haskell/ch02/ch02-reading-guide/</link>
      <pubDate>Sat, 09 Sep 2017 15:57:47 -0500</pubDate>
      
      <guid>https://wy-cs.site/ap-cs/haskell/ch02/ch02-reading-guide/</guid>
      <description>Haskell Starting Out Questions A. Sections 2.1&amp;ndash;2.3  There is an annoyance with negative numbers that is mentioned.
 What is the correct way to write five times negative three in Haskell? What is a wrong way to do the same thing?  Logical operations are basic building blocks of programs. How do you write:
 and or not equals not equals  Haskell follows mostly the normal order of operations from mathematics.</description>
    </item>
    
    <item>
      <title>Haskell Calendar</title>
      <link>https://wy-cs.site/ap-cs/haskell-calendar/</link>
      <pubDate>Wed, 05 Sep 2018 11:19:45 -0500</pubDate>
      
      <guid>https://wy-cs.site/ap-cs/haskell-calendar/</guid>
      <description>Daily calendar for Haskell unit.
 </description>
    </item>
    
    <item>
      <title>Haskell CW II.2</title>
      <link>https://wy-cs.site/ap-cs/haskell/ch02/cw-a2/</link>
      <pubDate>Sat, 09 Sep 2017 15:57:47 -0500</pubDate>
      
      <guid>https://wy-cs.site/ap-cs/haskell/ch02/cw-a2/</guid>
      <description>&lt;script type=&#34;text/x-mathjax-config&#34;&gt;
MathJax.Hub.Config({
tex2jax: {
  inlineMath: [[&#39;$&#39;,&#39;$&#39;], [&#39;\\(&#39;,&#39;\\)&#39;]],
  displayMath: [[&#39;$$&#39;,&#39;$$&#39;], [&#39;\\[&#39;,&#39;\\]&#39;]]
  }});
&lt;/script&gt;

&lt;script async type=&#34;text/javascript&#34; src=&#34;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS_CHTML&#34;&gt;
&lt;/script&gt;



&lt;h2 id=&#34;warmup&#34;&gt;Warmup&lt;/h2&gt;

&lt;p&gt;On the line $y = 3x-5$, find at least 20 ordered pairs $(x,y)$ with
$0\le x \le 5$.&lt;/p&gt;

&lt;h2 id=&#34;class-work-for-2-1-2-3&#34;&gt;Class work for 2.1&amp;ndash;2.3&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&#34;https://projecteuler.net/problem=6&#34;&gt;Sum Square Difference&lt;/a&gt;
The sum of the squares of the first ten natural numbers is,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;1^2 + 2^2 + ... + 10^2 = 385&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The square of the sum of the first ten natural numbers is,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#272822;background-color:#fafafa;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;(1 + 2 + ... + 10)^2 = 55^2 = 3025&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Hence the difference between the sum of the squares of the first ten natural numbers and the square of the sum is 3025 âˆ’ 385 = 2640.&lt;/p&gt;

&lt;p&gt;Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Haskell HW 2</title>
      <link>https://wy-cs.site/ap-cs/haskell/ch02/hw-a2/</link>
      <pubDate>Wed, 12 Sep 2018 15:57:47 -0500</pubDate>
      
      <guid>https://wy-cs.site/ap-cs/haskell/ch02/hw-a2/</guid>
      <description>&lt;p&gt;Graph a function, is a point on a line, get the numbers more than 100, break up a list,
find the nearest point.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Chapter 3 Reading Guide</title>
      <link>https://wy-cs.site/ap-cs/haskell/ch03/ch03-reading-guide-haskell/</link>
      <pubDate>Wed, 13 Sep 2017 13:18:35 -0500</pubDate>
      
      <guid>https://wy-cs.site/ap-cs/haskell/ch03/ch03-reading-guide-haskell/</guid>
      <description>&lt;p&gt;We learn about types and typeclasses.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>